<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Deploy vm on qa hw.
Setup rally envirment.
Run test
Mandatory parameter: hw_number
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>cloud-mkphyscloud-gate-qa</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>7</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>hw_number</name>
          <description>Mandatory, number of the QA cloud server</description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>image_name</name>
          <description>Pre condition to have jeos image uploaded before running rally tests
</description>
          <defaultValue>jeos-64</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_name</name>
          <description>Optional; scenario name which typically is an integer with a single letter</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_job_name</name>
          <description>Optional; name of the scenario jenkins job that is used to trigger this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_build_number</name>
          <description>Optional; scenario build number that triggered this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>rally_server</name>
          <description>Server hostname where rally is setup</description>
          <defaultValue>backup.cloudadm.qa.suse.de</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
admin=crowbar$hw_number;
cloud=qa$hw_number;

export artifacts_dir=$WORKSPACE/.artifacts
rm -rf $artifacts_dir
mkdir -p $artifacts_dir
touch $artifacts_dir/.ignore

# Connect to rally server and run tests
ssh -T root@$rally_server "bash -s $cloud $image_name" &lt;&lt;'EOF'

cloud=$1
image_name=$2

source .openrc
# Check if jeos image already exist on cloud
openstack image show -c name --format value $image_name
image_exist=$?
# Upload jeos image
if [[ $image_exis != 0 ]]; then
    curl -s http://clouddata.cloud.suse.de/images/jeos-64.qcow2 |
openstack image create --public --disk-format qcow2 $image_name
fi
# Check if specific cloud deployemnt already exist
rally deployment list | grep $cloud
deployment_exist=$?
if [[ $deployment_exist != 0 ]]; then
    # Creat new cloud deployment env
    rally deployment create --filename $cloud-deployment.json --name $cloud
else
    # Use existing deployment
    rally deployment use $cloud
fi
# Run rally test
rally task start rally/samples/tasks/scenarios/nova/boot-and-delete.json
# Generate html output
rally task report --out=boot-and-delete.html
EOF
# Copy test run reslust output to jenkins artifacts
scp root@$rally_server:/root/*.html $artifacts_dir
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>.artifacts/**</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
      <template>#${BUILD_NUMBER} - ${scenario_name} - qa$hw_number - full</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
    <hudson.plugins.timestamper.TimestamperBuildWrapper/>
  </buildWrappers>
</project>
